node {
    def myGradleContainer = docker.image('gradle:jdk8-alpine')
    myGradleContainer.pull()
    def mymavenContainer = docker.image('maven:3-alpine')
    mymavenContainer.pull()
    try{
        notifyBuild('STARTED')

        stage('prep') {
            git url: 'https://github.com/harshu004/gs-gradle.git'
        }

        stage('build') {
            myGradleContainer.inside("-v ${env.HOME}/.gradle:/home/gradle/.gradle") {
                sh 'cd complete && /opt/gradle/bin/gradle build'
            }

        }
        //stage('sonar-scanner') {
          //  def sonarqubeScannerHome = tool name: 'sonar', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
            //withCredentials([string(credentialsId: 'sonar', variable: 'sonarLogin')]){
              //  sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonarqube:9000 -Dsonar.login=${sonarLogin} -Dsonar.projectName=gs-gradle -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=complete/src/main/ -Dsonar.tests=complete/src/test/ -Dsonar.language=java"

            //}
        //}
    } catch (e) {
        // If there was an exception thrown, the build failed
        currentBuild.result = "FAILED"
        throw e
    } finally {
        // Success or failure, always send notifications
        notifyBuild(currentBuild.result)

    }

}

def notifyBuild(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus =  buildStatus ?: 'SUCCESSFUL'

    // Default values
    def colorName = 'RED'
    def colorCode = '#FF0000'
    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"

    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'YELLOW'
        colorCode = '#FFFF00'

    } else if (buildStatus == 'SUCCESSFUL') {
        color = 'GREEN'
        colorCode = '#00FF00'

    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }
    // Send notifications
    slackSend (color: colorCode, message: summary)
        
}

    